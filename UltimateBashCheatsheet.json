{
"quotes": \[
"ls - list directory contents",
"ls -l - long listing format",
"ls -a - list all files including hidden",
"cd /path - change directory to /path",
"cd .. - go up one directory",
"cd \~ - go to home directory",
"pwd - print current working directory",
"mkdir new\_folder - create a new directory",
"mkdir -p /tmp/new\_folder/subfolder - create nested directories",
"rm file.txt - remove a file",
"rm -r folder - remove a folder recursively",
"rm -f file.txt - force remove file",
"cp file1.txt file2.txt - copy file1 to file2",
"cp -r folder1/ folder2/ - copy folder recursively",
"mv oldname.txt newname.txt - rename file",
"mv file.txt /tmp/ - move file to /tmp/",
"echo "Hello World" - print Hello World",
"echo \\\$HOME - print home directory path",
"cat file.txt - display file contents",
"cat file1.txt file2.txt - concatenate files",
"grep 'pattern' file.txt - search for pattern",
"grep -i 'pattern' file.txt - case insensitive search",
"grep -r 'pattern' /path - recursive search",
"awk '{print \\\$1}' file.txt - print first column",
"awk -F, '{print \\\$2}' file.csv - print second column using comma separator",
"sed 's/old/new/g' file.txt - replace old with new",
"sed -n '1,5p' file.txt - print lines 1 to 5",
"find /home -name file.txt - search for file by name",
"find . -type d -name 'folder\*' - find directories matching pattern",
"chmod 755 script.sh - change file permission to rwxr-xr-x",
"chmod +x script.sh - make script executable",
"chown user\:group file.txt - change file owner and group",
"chown -R user\:group /home/user/folder - change ownership recursively",
"tar -cvf archive.tar file1 file2 - create tar archive",
"tar -xvf archive.tar - extract tar archive",
"tar -czvf archive.tar.gz folder/ - create gzip compressed archive",
"zip archive.zip file1 file2 - create zip archive",
"zip -r archive.zip folder/ - recursively zip folder",
"unzip archive.zip - extract zip file",
"unzip archive.zip -d /tmp - extract zip to /tmp",
"wget [http://example.com/file.txt](http://example.com/file.txt) - download file using wget",
"wget -O newfile.txt [http://example.com/file.txt](http://example.com/file.txt) - download to newfile.txt",
"curl [http://example.com](http://example.com) - download file using curl",
"curl -O [http://example.com/file.txt](http://example.com/file.txt) - download preserving filename",
"ps - display processes",
"ps aux - detailed process list",
"ps -ef - full format process list",
"top - dynamic real-time view of processes",
"htop - interactive process viewer",
"kill 1234 - terminate process with PID 1234",
"kill -9 1234 - force terminate process",
"jobs - list background jobs",
"fg %1 - bring job 1 to foreground",
"bg %1 - send job 1 to background",
"alias ll="ls -l" - create alias for ls -l",
"alias gs="git status" - create alias for git status",
"unalias ll - remove alias ll",
"history - show command history",
"history | grep ls - search history for ls commands",
"man ls - show manual for ls",
"man grep - show manual for grep",
"which python - find location of python executable",
"which ls - find location of ls executable",
"whereis ls - locate binary, source, and manual",
"whereis python - locate python executable",
"uname - show system information",
"uname -a - show all system info",
"df - show disk space usage",
"df -h - human-readable disk usage",
"du file.txt - estimate file space usage",
"du -h /home/user - human-readable disk usage",
"; - run commands sequentially, e.g., cd /tmp; ls",
"&& - run second command only if first succeeds, e.g., mkdir new\_folder && cd new\_folder",
"|| - run second command only if first fails, e.g., mkdir existing\_folder || echo "Folder exists"",
"& - run command in background, e.g., sleep 10 &",
"| - pipe output to another command, e.g., ls -l | grep '.txt'",
"> - redirect stdout to file, e.g., echo "Hello" > file.txt",
">> - append stdout to file, e.g., echo "World" >> file.txt",
"< - redirect stdin from file, e.g., wc -l < file.txt",
"2> - redirect stderr to file, e.g., ls /nonexistent 2> error.log",
"&> - redirect stdout and stderr, e.g., command &> output.log",
"\$() - command substitution, e.g., echo "Today is \\\$(date)"",
"\* - wildcard, match zero or more characters, e.g., ls \*.txt",
"? - wildcard, match exactly one character, e.g., ls file?.txt",
"for i in \*; do echo \\\$i; done - loop through files",
"while read line; do echo \\\$line; done < file.txt - read file line by line",
"if \[ -f file.txt ]; then echo exists; fi - check if file exists",
"test -f file.txt - test if file exists",
"\[ -d /tmp ] - test if directory exists",
"grep -v 'pattern' file.txt - inverse match",
"head -n 10 file.txt - show first 10 lines",
"tail -n 10 file.txt - show last 10 lines",
"tail -f /var/log/syslog - follow log file",
"sort file.txt - sort lines alphabetically",
"uniq file.txt - remove duplicate lines",
"diff file1.txt file2.txt - show differences",
"cmp file1.txt file2.txt - compare files byte by byte",
"tee output.txt - write stdout to file and terminal",
"basename /path/to/file - get filename",
"dirname /path/to/file - get directory path",
"sleep 5 - pause for 5 seconds",
"date - show current date and time",
"cal - display calendar",
"clear - clear terminal",
"whoami - display current user",
"id - show user ID and group ID",
"env - display environment variables",
"export VAR=value - set environment variable",
"unset VAR - remove environment variable",
"read VAR - read input into variable",
"echo \\\$SHELL - show current shell",
"hostname - show system hostname",
"uptime - show system uptime",
"free - show memory usage",
"mount - show mounted filesystems",
"umount /mnt - unmount filesystem",
"ping google.com - check connectivity",
"traceroute google.com - trace network route",
"dig example.com - DNS lookup",
"nslookup example.com - DNS query",
"scp file.txt user\@host:/path - copy file via SSH",
"rsync -av source/ destination/ - sync directories",
"git clone repo\_url - clone git repository",
"git status - show git status",
"git add file.txt - stage file",
"git commit -m "msg" - commit changes",
"git push origin main - push changes",
"git pull origin main - pull changes",
"ssh user\@host - connect to remote host",
"screen - start a screen session",
"tmux - start tmux session",
"nano file.txt - open file in nano editor",
"vi file.txt - open file in vi editor",
"vim file.txt - open file in vim editor"
]
}
